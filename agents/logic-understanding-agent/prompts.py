"""Prompt templates for Logic Understanding Agent"""
from typing import Dict, List, Any


def format_preliminary_summary(summary: List[Dict[str, Any]]) -> str:
    """Format metadata summary for prompt"""
    lines = []
    for sheet in summary:
        sheet_name = sheet.get("name", "Unknown")
        rows = sheet.get("rows", 0)
        columns = sheet.get("columns", [])
        
        lines.append(f"- '{sheet_name}': {rows} —Å—Ç—Ä–æ–∫, {len(columns)} –∫–æ–ª–æ–Ω–æ–∫")
        
        # Show first 5 columns
        col_preview = ", ".join(columns[:5])
        if len(columns) > 5:
            col_preview += f"... (–µ—â—ë {len(columns) - 5})"
        lines.append(f"  –ö–æ–ª–æ–Ω–∫–∏: {col_preview}")
    
    return "\n".join(lines)


def build_super_prompt(metadata: Dict[str, Any], user_query: str) -> str:
    """Build intelligent prompt for multi-sheet analysis
    
    This prompt instructs Gemini to:
    1. Show metadata summary
    2. Ask user which sheet to analyze
    3. Wait for user's sheet selection
    """
    
    sheets_count = metadata.get("sheets_count", 0)
    sheet_names = metadata.get("sheet_names", [])
    file_size_kb = metadata.get("file_size_bytes", 0) / 1024
    top_sheets = metadata.get("top_sheets_summary", [])
    
    # Format sheet names for display
    if len(sheet_names) <= 10:
        sheet_list = ", ".join([f"'{name}'" for name in sheet_names])
    else:
        # Show first 8 and last 2
        first_sheets = ", ".join([f"'{name}'" for name in sheet_names[:8]])
        last_sheets = ", ".join([f"'{name}'" for name in sheet_names[-2:]])
        sheet_list = f"{first_sheets}... {last_sheets}"
    
    summary = format_preliminary_summary(top_sheets)
    
    return f"""[–ò–ù–°–¢–†–£–ö–¶–ò–Ø –î–õ–Ø –ê–ù–ê–õ–ò–¢–ò–ö–ê GEMINI]

–¢—ã ‚Äî AI-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç "–§–∏–Ω–∞–Ω—Å–æ–≤—ã–π –≠–∫—Å–ø–µ—Ä—Ç". –¢–≤–æ–π —Ç–æ–Ω ‚Äî –¥—Ä—É–∂–µ–ª—é–±–Ω—ã–π –∏ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π.

[–†–û–õ–¨]
–¢–≤–æ—è –∑–∞–¥–∞—á–∞ ‚Äî –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π –∞–Ω–∞–ª–∏–∑. –ù–ï –ø—ã—Ç–∞–π—Å—è –∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –¥–∞–Ω–Ω—ã–µ –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å. –°–Ω–∞—á–∞–ª–∞ –ø–æ–º–æ–≥–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –≤—ã–±—Ä–∞—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –ª–∏—Å—Ç –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞.

[–ö–û–ù–¢–ï–ö–°–¢ –î–ê–ù–ù–´–•]
–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–≥—Ä—É–∑–∏–ª Excel-—Ñ–∞–π–ª. –í–æ—Ç –µ–≥–æ **–°–¢–†–£–ö–¢–£–†–ê**:

üìä **–û–±—â–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:**
- –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ª–∏—Å—Ç–æ–≤: {sheets_count}
- –†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞: {file_size_kb:.1f} KB

üìã **–í—Å–µ –ª–∏—Å—Ç—ã –≤ —Ñ–∞–π–ª–µ:**
{sheet_list}

üìà **–¢–æ–ø-{len(top_sheets)} —Å–∞–º—ã—Ö –±–æ–ª—å—à–∏—Ö –ª–∏—Å—Ç–æ–≤:**
{summary}

[–í–û–ü–†–û–° –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø]
"{user_query}"

[–¢–í–û–Ø –ó–ê–î–ê–ß–ê]
–°—Ñ–æ—Ä–º–∏—Ä—É–π –æ—Ç–≤–µ—Ç –∏–∑ –î–í–£–• —á–∞—Å—Ç–µ–π:

**1. –†–ï–ó–Æ–ú–ï –§–ê–ô–õ–ê** (2-3 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è):
- –£–∫–∞–∂–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ª–∏—Å—Ç–æ–≤ ({sheets_count})
- –ö—Ä–∞—Ç–∫–æ –æ–ø–∏—à–∏ —á—Ç–æ —Å–æ–¥–µ—Ä–∂–∏—Ç—Å—è –≤ —Ç–æ–ø-–ª–∏—Å—Ç–∞—Ö
- –ú–æ–∂–µ—à—å –ø—Ä–µ–¥–ø–æ–ª–æ–∂–∏—Ç—å –Ω–∞–∑–Ω–∞—á–µ–Ω–∏–µ —Ñ–∞–π–ª–∞ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—è–º –ª–∏—Å—Ç–æ–≤

**2. –í–û–ü–†–û–° –ö –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Æ** (1-2 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è):
–ó–∞–¥–∞–π –û–î–ò–ù —á–µ—Ç–∫–∏–π –≤–æ–ø—Ä–æ—Å: –∫–∞–∫–æ–π –ª–∏—Å—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Ö–æ—á–µ—Ç –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å?

–ü—Ä–∏–º–µ—Ä—ã —Ö–æ—Ä–æ—à–∏—Ö –≤–æ–ø—Ä–æ—Å–æ–≤:
- "–ö–∞–∫–æ–π –∏–∑ —ç—Ç–∏—Ö –ª–∏—Å—Ç–æ–≤ –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç –±–æ–ª—å—à–µ –≤—Å–µ–≥–æ?"
- "–ö–∞–∫–æ–π –ª–∏—Å—Ç –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –ø–µ—Ä–≤—ã–º: '–ü—Ä–æ–¥–∞–∂–∏', '–¢—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏' –∏–ª–∏ –¥—Ä—É–≥–æ–π?"
- "–°–∫–∞–∂–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ª–∏—Å—Ç–∞, –∫–æ—Ç–æ—Ä—ã–π –Ω—É–∂–Ω–æ –∏–∑—É—á–∏—Ç—å –¥–µ—Ç–∞–ª—å–Ω–æ"

[–í–ê–ñ–ù–´–ï –ü–†–ê–í–ò–õ–ê]
‚úÖ –ë—É–¥—å –∫—Ä–∞—Ç–∫–∏–º (–º–∞–∫—Å–∏–º—É–º 5-6 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π –≤—Å–µ–≥–æ)
‚úÖ –ù–ï –∏—Å–ø–æ–ª—å–∑—É–π markdown —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ (–Ω–µ—Ç **, ##, —Å–ø–∏—Å–∫–æ–≤)
‚úÖ –ü–∏—à–∏ –æ–±—ã—á–Ω—ã–º —Ç–µ–∫—Å—Ç–æ–º, —Ä–∞–∑–¥–µ–ª—è–π –∞–±–∑–∞—Ü—ã –ø—É—Å—Ç–æ–π —Å—Ç—Ä–æ–∫–æ–π
‚úÖ –ù–ï –∞–Ω–∞–ª–∏–∑–∏—Ä—É–π –¥–∞–Ω–Ω—ã–µ - –ø—Ä–æ—Å—Ç–æ –ø–æ–º–æ–≥–∏ –≤—ã–±—Ä–∞—Ç—å –ª–∏—Å—Ç
‚úÖ –ù–ï –ø–æ–≤—Ç–æ—Ä—è–π –≤—Å–µ –Ω–∞–∑–≤–∞–Ω–∏—è –ª–∏—Å—Ç–æ–≤ - –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∏—Ö –≤–∏–¥–∏—Ç –≤ —Å—Ç—Ä—É–∫—Ç—É—Ä–µ –≤—ã—à–µ

[–°–õ–ï–î–£–Æ–©–ò–ô –®–ê–ì]
–ü–æ—Å–ª–µ —Ç–æ–≥–æ –∫–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–∑–æ–≤—ë—Ç –ª–∏—Å—Ç, —Å–∏—Å—Ç–µ–º–∞ –∑–∞–≥—Ä—É–∑–∏—Ç –ü–û–õ–ù–´–ï –¥–∞–Ω–Ω—ã–µ —ç—Ç–æ–≥–æ –ª–∏—Å—Ç–∞ –¥–ª—è –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞.
"""


def build_sheet_analysis_prompt(sheet_data: Dict[str, Any], user_query: str, sheet_name: str) -> str:
    """Build prompt for analyzing specific sheet after user selection
    
    This prompt is used after user has selected a specific sheet to analyze.
    """
    
    rows = sheet_data.get("rows", 0)
    columns = sheet_data.get("columns", [])
    sample_data = sheet_data.get("data", [])[:3]  # First 3 rows
    
    # Format sample data
    data_preview = "\n".join([str(row) for row in sample_data])
    
    return f"""–¢—ã –æ–ø—ã—Ç–Ω—ã–π —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–π –∞–Ω–∞–ª–∏—Ç–∏–∫ –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–æ–≤.

**–ö–æ–Ω—Ç–µ–∫—Å—Ç:**
–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–≥—Ä—É–∑–∏–ª Excel-—Ñ–∞–π–ª —Å {rows} —Å—Ç—Ä–æ–∫–∞–º–∏ –¥–∞–Ω–Ω—ã—Ö –∏–∑ –ª–∏—Å—Ç–∞ '{sheet_name}'.

**–°—Ç—Ä—É–∫—Ç—É—Ä–∞ –¥–∞–Ω–Ω—ã—Ö:**
–ö–æ–ª–æ–Ω–∫–∏: {', '.join(columns[:10])}
{f'... (–µ—â—ë {len(columns) - 10} –∫–æ–ª–æ–Ω–æ–∫)' if len(columns) > 10 else ''}

**–û–±—Ä–∞–∑–µ—Ü –¥–∞–Ω–Ω—ã—Ö (–ø–µ—Ä–≤—ã–µ 3 —Å—Ç—Ä–æ–∫–∏):**
```
{data_preview}
```

**–í–æ–ø—Ä–æ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:**
"{user_query}"

**–¢–≤–æ—è –∑–∞–¥–∞—á–∞:**
–ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π –¥–∞–Ω–Ω—ã–µ –∏ –æ—Ç–≤–µ—Ç—å –Ω–∞ –≤–æ–ø—Ä–æ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. –§–æ–∫—É—Å–∏—Ä—É–π—Å—è –Ω–∞:
- –ö–ª—é—á–µ–≤—ã—Ö –º–µ—Ç—Ä–∏–∫–∞—Ö –∏ —Ü–∏—Ñ—Ä–∞—Ö
- –¢—Ä–µ–Ω–¥–∞—Ö –∏ –∑–∞–∫–æ–Ω–æ–º–µ—Ä–Ω–æ—Å—Ç—è—Ö
- –ö–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö –≤—ã–≤–æ–¥–∞—Ö –∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è—Ö

**–ü—Ä–∞–≤–∏–ª–∞:**
‚úÖ –ë—É–¥—å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–º - —Å—Å—ã–ª–∞–π—Å—è –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∏ —Ü–∏—Ñ—Ä—ã
‚úÖ –ë—É–¥—å –∫—Ä–∞—Ç–∫–∏–º - –º–∞–∫—Å–∏–º—É–º 4-5 –∞–±–∑–∞—Ü–µ–≤
‚úÖ –ò—Å–ø–æ–ª—å–∑—É–π –æ–±—ã—á–Ω—ã–π —Ç–µ–∫—Å—Ç –±–µ–∑ markdown
‚úÖ –ï—Å–ª–∏ –Ω—É–∂–Ω–∞ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è - —Å–ø—Ä–æ—Å–∏

–û—Ç–≤–µ—á–∞–π –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ –∏ –ø–æ –¥–µ–ª—É.
"""
