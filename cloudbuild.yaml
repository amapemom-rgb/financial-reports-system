# Main Cloud Build configuration for all microservices
# Builds and pushes all 5 agents to Artifact Registry

steps:
  # ============================================
  # Frontend Service
  # ============================================
  - name: 'gcr.io/cloud-builders/docker'
    id: 'build-frontend'
    args:
      - 'build'
      - '-t'
      - 'us-central1-docker.pkg.dev/$PROJECT_ID/financial-reports/frontend-service:$SHORT_SHA'
      - '-t'
      - 'us-central1-docker.pkg.dev/$PROJECT_ID/financial-reports/frontend-service:latest'
      - '-f'
      - 'agents/frontend-service/Dockerfile'
      - 'agents/frontend-service'

  - name: 'gcr.io/cloud-builders/docker'
    id: 'push-frontend'
    args: ['push', '--all-tags', 'us-central1-docker.pkg.dev/$PROJECT_ID/financial-reports/frontend-service']
    waitFor: ['build-frontend']

  # ============================================
  # Orchestrator Agent
  # ============================================
  - name: 'gcr.io/cloud-builders/docker'
    id: 'build-orchestrator'
    args:
      - 'build'
      - '-t'
      - 'us-central1-docker.pkg.dev/$PROJECT_ID/financial-reports/orchestrator-agent:$SHORT_SHA'
      - '-t'
      - 'us-central1-docker.pkg.dev/$PROJECT_ID/financial-reports/orchestrator-agent:latest'
      - '-f'
      - 'agents/orchestrator-agent/Dockerfile'
      - 'agents/orchestrator-agent'
    waitFor: ['push-frontend']

  - name: 'gcr.io/cloud-builders/docker'
    id: 'push-orchestrator'
    args: ['push', '--all-tags', 'us-central1-docker.pkg.dev/$PROJECT_ID/financial-reports/orchestrator-agent']
    waitFor: ['build-orchestrator']

  # ============================================
  # Report Reader Agent
  # ============================================
  - name: 'gcr.io/cloud-builders/docker'
    id: 'build-report-reader'
    args:
      - 'build'
      - '-t'
      - 'us-central1-docker.pkg.dev/$PROJECT_ID/financial-reports/report-reader-agent:$SHORT_SHA'
      - '-t'
      - 'us-central1-docker.pkg.dev/$PROJECT_ID/financial-reports/report-reader-agent:latest'
      - '-f'
      - 'agents/report-reader-agent/Dockerfile'
      - 'agents/report-reader-agent'
    waitFor: ['push-orchestrator']

  - name: 'gcr.io/cloud-builders/docker'
    id: 'push-report-reader'
    args: ['push', '--all-tags', 'us-central1-docker.pkg.dev/$PROJECT_ID/financial-reports/report-reader-agent']
    waitFor: ['build-report-reader']

  # ============================================
  # Logic Understanding Agent (with Reasoning Engine v2)
  # ============================================
  - name: 'gcr.io/cloud-builders/docker'
    id: 'build-logic'
    args:
      - 'build'
      - '-t'
      - 'us-central1-docker.pkg.dev/$PROJECT_ID/financial-reports/logic-understanding-agent:$SHORT_SHA'
      - '-t'
      - 'us-central1-docker.pkg.dev/$PROJECT_ID/financial-reports/logic-understanding-agent:latest'
      - '-f'
      - 'agents/logic-understanding-agent/Dockerfile'
      - 'agents/logic-understanding-agent'
    waitFor: ['push-report-reader']

  - name: 'gcr.io/cloud-builders/docker'
    id: 'push-logic'
    args: ['push', '--all-tags', 'us-central1-docker.pkg.dev/$PROJECT_ID/financial-reports/logic-understanding-agent']
    waitFor: ['build-logic']

  # ============================================
  # Visualization Agent
  # ============================================
  - name: 'gcr.io/cloud-builders/docker'
    id: 'build-visualization'
    args:
      - 'build'
      - '-t'
      - 'us-central1-docker.pkg.dev/$PROJECT_ID/financial-reports/visualization-agent:$SHORT_SHA'
      - '-t'
      - 'us-central1-docker.pkg.dev/$PROJECT_ID/financial-reports/visualization-agent:latest'
      - '-f'
      - 'agents/visualization-agent/Dockerfile'
      - 'agents/visualization-agent'
    waitFor: ['push-logic']

  - name: 'gcr.io/cloud-builders/docker'
    id: 'push-visualization'
    args: ['push', '--all-tags', 'us-central1-docker.pkg.dev/$PROJECT_ID/financial-reports/visualization-agent']
    waitFor: ['build-visualization']

# Total timeout for all builds (15 minutes)
timeout: '900s'

# Build options
options:
  logging: CLOUD_LOGGING_ONLY
  machineType: 'E2_HIGHCPU_8'
